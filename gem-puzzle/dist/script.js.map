{"version":3,"sources":["webpack://gem-puzzle/./src/gameRules.js","webpack://gem-puzzle/./src/render.js","webpack://gem-puzzle/webpack/bootstrap","webpack://gem-puzzle/webpack/runtime/define property getters","webpack://gem-puzzle/webpack/runtime/hasOwnProperty shorthand","webpack://gem-puzzle/webpack/startup"],"names":["timerId","draggingCell","dragBlock","min","sec","targetDragBlock","this","isVolume","audio","document","querySelector","currentTime","play","e","target","closest","rows","columns","field","draggingIndex","Array","from","childNodes","indexOf","blocksCoord","dataTransfer","setData","id","classList","add","remove","indexOfNodes","moveCount","empty","audioHandler","targetElem","leftDiv","Math","abs","parseFloat","left","style","topDiv","top","blockSize","textContent","emptyLeft","emptyTop","emptyCell","emptyBlock","elem","every","item","value","winHandler","indexOfblockNode","blockElem","isFinished","addEventListener","dragStart","event","moveHandler","dragFinish","dragDrop","i1","i2","t","numbers","a","kDisorder","i","len","length","j","clearInterval","savedFieldObj","board","forEach","savedCoord","moves","block","gameArray","push","localStorage","setItem","JSON","stringify","body","testNew","GameRules","fieldObj","parse","getItem","Object","values","map","getBlocks","isSolved","pause","addTimer","removeAttribute","stopWatch","setInterval","parseInt","pauseHandler","init","overlay","reload","newGameHandler","results","createElement","win","pressReload","resultWrapper","winTime","appendChild","unshift","li","checkSolvability","swapBlocks","Render","fieldOptions","floor","keys","sort","random","counter","isPause","sortedArray","suffleIndex","createIconHTML","icon_name","header","time","newGame","chooseFieldSize","pauseGame","volumeUp","audioClick","saveGame","loadGame","saveChange","leaderBoardWrap","leaderBoardList","leaderButton","toggle","innerHTML","setTimeout","saveGameHandler","setAttribute","selected","selectItem","resumeTimer","newField","getField","width","height","backgroundImage","index","blocksPosition","blocksListenerHandler","x","backLeft","backgroundLeft","backTop","backgrounTop","backgroundRepeat","backgroundPosition","blockAmount","ondragstart","preventDefault","background","__webpack_module_cache__","__webpack_require__","moduleId","exports","module","__webpack_modules__","d","definition","key","o","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call"],"mappings":"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","file":"script.js","sourcesContent":["import Render from './render.js'\r\nlet timerId;\r\nlet min = 0;\r\nlet sec = 0;\r\nlet draggingCell;\r\nlet dragBlock;\r\n\r\nclass GameRules extends Render {\r\n    constructor() {\r\n        super();\r\n        this.targetDragBlock;\r\n    }\r\n    audioHandler() {\r\n        if (this.isVolume) {\r\n            const audio = document.querySelector('#click-sound');\r\n            audio.currentTime = 0;\r\n            audio.play();\r\n        }\r\n\r\n    }\r\n    dragStart(e) {\r\n        this.targetDragBlock = e.target;\r\n        const target = e.target.closest('[data-num]');\r\n        const emptyTarget = document.querySelector(`[data-num=\"${this.rows * this.columns}\"]`);\r\n        if (target === emptyTarget) {\r\n\r\n            return\r\n        }\r\n        const field = document.querySelector('.field');\r\n        const draggingIndex = Array.from(field.childNodes).indexOf(e.target)\r\n        draggingCell = this.blocksCoord[draggingIndex];\r\n        dragBlock = e.target.closest('[data-num]');\r\n\r\n\r\n        e.dataTransfer.setData('block', e.target.id);\r\n        target.classList.add('invisible');\r\n        e.dataTransfer.setData('block', target)\r\n    }\r\n    dragFinish(e) {\r\n        const target = e.target.closest('[data-num]');\r\n        target.classList.remove('invisible');   \r\n    }\r\n\r\n    moveHandler(e, indexOfNodes) {\r\n\r\n        const moveCount = document.querySelector('.move-count')\r\n      \r\n        const empty = document.querySelector(`[data-num=\"${this.rows * this.columns}\"]`)\r\n        const target = e.target.closest('[data-num]');\r\n        if (target === null) return;\r\n        this.audioHandler()\r\n        const targetElem = this.blocksCoord[indexOfNodes];\r\n        const leftDiv = Math.abs(parseFloat(this.empty.left) - (parseFloat(target.style.left)));\r\n        const topDiv = Math.abs(parseFloat(this.empty.top) - (parseFloat(target.style.top)));\r\n\r\n        if ((topDiv + leftDiv) > this.blockSize) {\r\n            return\r\n        }\r\n        if ((topDiv + leftDiv) == this.blockSize) {\r\n\r\n            moveCount.textContent = ++moveCount.textContent;\r\n        }\r\n        const emptyLeft = empty.style.left;\r\n        const emptyTop = empty.style.top;\r\n        const emptyCell = this.blocksCoord[this.emptyBlock]\r\n        empty.style.left = targetElem.elem.style.left;\r\n        empty.style.top = targetElem.elem.style.top;\r\n\r\n        targetElem.elem.style.top = emptyTop;\r\n        targetElem.elem.style.left = emptyLeft;\r\n        targetElem.left = parseFloat(emptyLeft) / this.blockSize\r\n        targetElem.top = parseFloat(emptyTop) / this.blockSize\r\n        this.empty.left = empty.style.left;\r\n        this.empty.top = empty.style.top;\r\n\r\n        emptyCell.top = parseFloat(this.empty.top) / this.blockSize;\r\n        emptyCell.left = parseFloat(this.empty.left) / this.blockSize;\r\n        const isFinished = this.blocksCoord.every((item) => item.value == item.top * this.rows + item.left)\r\n\r\n\r\n\r\n\r\n\r\n        if (isFinished) {\r\n\r\n            this.winHandler()\r\n\r\n        }\r\n    }\r\n\r\n    dragDrop(e, indexOfNodes, indexOfblockNode) {\r\n        const moveCount = document.querySelector('.move-count')\r\n        let target = e.target;\r\n        let targetElem = this.blocksCoord[indexOfNodes];\r\n        let blockElem = this.blocksCoord[indexOfblockNode]\r\n        const emptyLeft = targetElem.elem.style.left;\r\n        const emptyTop = targetElem.elem.style.top;\r\n\r\n        const leftDiv = Math.abs(parseFloat(this.empty.left) - (parseFloat(dragBlock.style.left)));\r\n        const topDiv = Math.abs(parseFloat(this.empty.top) - (parseFloat(dragBlock.style.top)));\r\n\r\n        if ((topDiv + leftDiv) > this.blockSize) {\r\n            return\r\n        }\r\n\r\n\r\n        target.style.top = draggingCell.elem.style.top\r\n        target.style.left = draggingCell.elem.style.left;\r\n\r\n        draggingCell.elem.style.top = emptyTop\r\n        draggingCell.elem.style.left = emptyLeft\r\n        const empty = document.querySelector(`[data-num=\"${this.rows * this.columns}\"]`)\r\n\r\n        blockElem.left = parseFloat(emptyLeft) / this.blockSize\r\n        blockElem.top = parseFloat(emptyTop) / this.blockSize\r\n\r\n        this.empty.left = empty.style.left;\r\n        this.empty.top = empty.style.top;\r\n        const isFinished = this.blocksCoord.every((item) => item.value == item.top * this.rows + item.left)\r\n        if ((topDiv + leftDiv) == this.blockSize) {\r\n\r\n            moveCount.textContent = ++moveCount.textContent;\r\n        }\r\n        if (isFinished) {\r\n\r\n            this.winHandler()\r\n        }\r\n    }\r\n    blocksListenerHandler() {\r\n        const field = document.querySelector('.field');\r\n        field.addEventListener('dragstart', (e) => {\r\n            this.dragStart(e)\r\n        })\r\n        field.addEventListener('click', (event) => {\r\n\r\n            const indexOfNodes = Array.from(field.childNodes).indexOf(event.target);\r\n\r\n            this.moveHandler(event, indexOfNodes)\r\n        })\r\n        field.addEventListener('dragend', this.dragFinish)\r\n        field.addEventListener('drop', (e) => {\r\n\r\n            let indexOfNodes = Array.from(field.childNodes).indexOf(e.target);\r\n            let indexOfblockNode = Array.from(field.childNodes).indexOf(this.targetDragBlock);\r\n            this.dragDrop(e, indexOfNodes, indexOfblockNode)\r\n\r\n        })\r\n\r\n    }\r\n\r\n    swapBlocks(i1, i2) {\r\n\r\n        let t = this.numbers[i1];\r\n        this.numbers[i1] = this.numbers[i2];\r\n        this.numbers[i2] = t;\r\n\r\n\r\n    }\r\n\r\n    checkSolvability(a) {\r\n        let kDisorder = 0\r\n        for (let i = 1, len = a.length - 1; i < len; i++) {\r\n            for (let j = i - 1; j >= 0; j--) {\r\n                if (a[j] > a[i]) {\r\n                    kDisorder++;\r\n                }\r\n            }\r\n        }\r\n        return !(kDisorder % 2);\r\n    }\r\n\r\n    pauseHandler() {\r\n\r\n        clearInterval(timerId)\r\n\r\n    }\r\n    saveGameHandler() {\r\n        // board: [...Array(15).keys()]\r\n\r\n        const moveCount = document.querySelector('.move-count')\r\n       let savedFieldObj = {\r\n           board: {}\r\n       }\r\n       this.blocksCoord.forEach((item) => {\r\n             let savedCoord = item.top*this.rows + item.left\r\n          savedFieldObj.board[`${savedCoord}`] = item.value;\r\n            \r\n            \r\n       })\r\n\r\n       savedFieldObj.min = min;\r\n       savedFieldObj.sec = sec;\r\n       savedFieldObj.moves = moveCount.textContent;\r\n       savedFieldObj.block = this.blockSize;\r\n       savedFieldObj.rows = this.rows;\r\n       savedFieldObj.columns = this.columns\r\n       let gameArray = [];\r\n       gameArray.push(savedFieldObj)\r\n       localStorage.setItem('saveField', JSON.stringify(gameArray))\r\n    }\r\n\r\n    loadGame() {\r\n        document.body.querySelector('.field').remove()\r\n        document.body.querySelector('.header').remove()\r\n        document.body.querySelector('.leader-wrap').remove()\r\n        let testNew = new GameRules();\r\n        let fieldObj = JSON.parse(localStorage.getItem('saveField'));\r\n        testNew.numbers = Object.values(fieldObj[0].board).map(item => item = item + 1)\r\n        testNew.rows = fieldObj[0].rows;\r\n        testNew.columns = fieldObj[0].columns;\r\n        testNew.blockSize = fieldObj[0].block;\r\n        testNew.getBlocks();\r\n        testNew.isSolved()\r\n        const field = document.querySelector('.field')\r\n        const moves = document.querySelector('.move-count');\r\n        const pause = document.querySelector('.pause-button')\r\n        moves.textContent = fieldObj[0].moves\r\n        min = fieldObj[0].min\r\n        sec = fieldObj[0].sec\r\n        this.addTimer()\r\n        field.querySelector('.overlay').remove()\r\n        pause.removeAttribute('disabled')\r\n    }\r\n    resumeTimer() {\r\n        const stopWatch = document.querySelector('.stop-watch');\r\n\r\n        timerId = setInterval(() => {\r\n            sec++;\r\n            sec = (parseInt(sec, 10) < 10 ? '0' : '') + sec;\r\n            if (sec > 60) {\r\n                sec = 0;\r\n                min++;\r\n            }\r\n            stopWatch.textContent = `${min}: ${sec}`\r\n        }, 1000)\r\n    }\r\n    newGameHandler() {\r\n        this.pauseHandler()\r\n        let testNew = new GameRules();\r\n        document.body.querySelector('.field').remove()\r\n        document.body.querySelector('.header').remove()\r\n        testNew.init()\r\n        const pause = document.querySelector('.pause-button');\r\n        pause.removeAttribute('disabled')\r\n        min = 0;\r\n        sec = 0;\r\n        const overlay = document.querySelector('.overlay');\r\n        const leader = document.querySelector('.leader-wrap');\r\n\r\n        leader.remove()\r\n        overlay.remove()\r\n        this.addTimer()\r\n    }\r\n    isSolved() {\r\n        const reload = document.querySelector('.reload');\r\n        const newGamStart = document.querySelector('.new-game');\r\n        newGamStart.addEventListener('click', () => {\r\n            this.newGameHandler()\r\n        })\r\n        reload.addEventListener('click', ()=>{\r\n            this.newGameHandler()\r\n        })\r\n    }\r\n    addTimer() {\r\n        const stopWatch = document.querySelector('.stop-watch');\r\n\r\n        timerId = setInterval(() => {\r\n            sec++;\r\n            sec = (parseInt(sec, 10) < 10 ? '0' : '') + sec;\r\n            if (sec > 60) {\r\n                sec = 0;\r\n                min++;\r\n            }\r\n            stopWatch.textContent = `${min}: ${sec}`\r\n        }, 1000)\r\n    }\r\n\r\n    winHandler() {\r\n        let results = JSON.parse(localStorage.getItem('results')) || [];\r\n        this.pauseHandler()\r\n        const field = document.querySelector('.field');\r\n        const overlay = document.createElement('div');\r\n        const moves = document.querySelector('.move-count');\r\n        const win = document.createElement('span');\r\n        const pressReload = document.createElement('span');\r\n        const resultWrapper = document.querySelector('.leader-list')\r\n        pressReload.classList.add('win')\r\n        const winTime = document.querySelector('.stop-watch')\r\n        win.classList.add('win')\r\n        win.textContent = `Congratulations! You win after ${moves.textContent} moves and ${winTime.textContent}`\r\n        pressReload.textContent = 'Press reload button to start new game';\r\n        overlay.classList.add('overlay');\r\n        overlay.appendChild(win)\r\n        overlay.appendChild(pressReload)\r\n        field.appendChild(overlay)\r\n        results.unshift([moves.textContent, winTime.textContent])\r\n        localStorage.setItem('results',JSON.stringify(results))\r\n\r\n            let li = document.createElement('div');\r\n            li.textContent = `Moves: ${JSON.parse(localStorage.getItem('results'))[0][0]}. Time: ${JSON.parse(localStorage.getItem('results'))[0][1]}`\r\n            resultWrapper.appendChild(li)\r\n\r\n    }\r\n    automaticSolve() {\r\n        \r\n    }\r\n\r\n    init() {\r\n        \r\n        while (!this.checkSolvability(this.numbers)) {\r\n            \r\n            this.swapBlocks(0, 1)\r\n        }\r\n        super.getBlocks();\r\n        this.isSolved()\r\n    }\r\n}\r\n\r\nlet testNew2 = new GameRules();\r\ntestNew2.init()\r\n\r\n","class Render {\r\n    constructor() {\r\n        this.fieldOptions = [3,4,5,6,7,8]\r\n        this.rows = localStorage.getItem('fieldSize') || 4;\r\n        this.columns = localStorage.getItem('fieldSize') || 4;\r\n        this.blockSize = Math.floor(450 / (this.rows))\r\n        this.empty = {\r\n            value: 16,\r\n            left: 0,\r\n            top: 0,\r\n        }\r\n        this.blocksCoord = [];\r\n        this.numbers = [...Array(this.rows * this.columns).keys()].map(item => item = item + 1).sort(()=>Math.random() - 0.5);\r\n        this.counter = 0;\r\n        this.min = 0;\r\n        this.sec = 0;\r\n        this.emptyBlock = 0;\r\n        this.isPause = false;\r\n        this.sortedArray =[];\r\n        this.isVolume = false;\r\n        this.suffleIndex = [];\r\n    }\r\n    \r\n    getField() {\r\n        \r\n        const createIconHTML = (icon_name) => {\r\n            return `<i class=\"material-icons\">${icon_name}</i>`;\r\n          };\r\n        const field = document.createElement('div');\r\n        const header = document.createElement('header');\r\n        const time = document.createElement('div');\r\n        const moves = document.createElement('div');\r\n        const moveCount = document.createElement('span')\r\n        const overlay = document.createElement('div');\r\n        const newGame = document.createElement('button');\r\n        const chooseFieldSize = document.createElement('select');\r\n        const pauseGame = document.createElement('button');\r\n        const stopWatch = document.createElement('span');\r\n        const volumeUp = document.createElement('div');\r\n        const audioClick = document.createElement('audio');\r\n        const reload = document.createElement('div');\r\n        const saveGame = document.createElement('button');\r\n        const loadGame = document.createElement('button');\r\n        const saveChange = document.createElement('span');\r\n        const leaderBoardWrap = document.createElement('div');\r\n        const leaderBoardList = document.createElement('div');\r\n        const leaderButton = document.createElement('button')\r\n        leaderButton.classList.add('leader-button');\r\n        leaderButton.textContent = 'Score'\r\n        leaderButton.addEventListener('click', ()=>{\r\n            leaderBoardWrap.classList.toggle('hidden')\r\n        })\r\n        leaderBoardWrap.classList.add('leader-wrap');\r\n        leaderBoardWrap.classList.add('hidden');\r\n        leaderBoardList.classList.add('leader-list');\r\n        if(JSON.parse(localStorage.getItem('results'))) {\r\nfor (let i = 0; i < JSON.parse(localStorage.getItem('results')).length; i++) {\r\n            let li = document.createElement('div');\r\n            li.textContent = `Moves: ${JSON.parse(localStorage.getItem('results'))[i][0]}. Time: ${JSON.parse(localStorage.getItem('results'))[i][1]}`\r\n            leaderBoardList.appendChild(li)\r\n        }\r\n        }\r\n        \r\n        leaderBoardWrap.appendChild(leaderBoardList)\r\n        saveChange.classList.add('save-change')\r\n        saveChange.textContent = 'Field size saved. Press \"NEW GAME\" button.'\r\n        reload.classList.add('reload');\r\n        reload.innerHTML = createIconHTML('autorenew');\r\n        saveGame.classList.add('save-game')\r\n        saveGame.textContent = 'Save game';\r\n        loadGame.classList.add('load-game')\r\n        loadGame.textContent = 'Load Game';\r\n        loadGame.addEventListener('click', ()=>{\r\n            this.loadGame()\r\n        })\r\n        saveGame.addEventListener('click',()=>{\r\n            saveGame.textContent ='Game saved';\r\n            setTimeout(()=>{\r\n                saveGame.textContent = 'Save Game'\r\n            }, 1000)\r\n            this.saveGameHandler()\r\n        })\r\n        audioClick.setAttribute('id', 'click-sound');\r\n        audioClick.setAttribute('src', \"./audio/b17af522a99b72f12e392e38f1b08e7e.MP3\")\r\n        volumeUp.classList.add('volume-up');\r\n        volumeUp.innerHTML =  createIconHTML(\"volume_off\");\r\n        volumeUp.addEventListener('click', ()=>{\r\n            this.isVolume = !this.isVolume;\r\n            if(this.isVolume) {\r\n                volumeUp.innerHTML = '';\r\n                volumeUp.innerHTML =  createIconHTML(\"volume_up\");\r\n            } else {\r\n                volumeUp.innerHTML =  createIconHTML(\"volume_off\");\r\n            }\r\n        })\r\n        stopWatch.classList.add('stop-watch');\r\n        stopWatch.textContent = '0: 00';\r\n        \r\n        chooseFieldSize.classList.add('choose-size')\r\n        chooseFieldSize.addEventListener('change', () => {\r\n            chooseFieldSize.childNodes.forEach(item => {\r\n                if (item.selected === true) {\r\n                    localStorage.setItem('fieldSize', item.value)\r\n                }\r\n                \r\n            })\r\n            overlay.appendChild(saveChange)\r\n            setTimeout(()=>{\r\n                overlay.querySelector('.save-change').remove()\r\n            },1000)\r\n        })\r\n\r\n        this.fieldOptions.forEach(item => {\r\n            const selectItem = document.createElement('option')\r\n            selectItem.textContent = `${item}x${item}`\r\n            selectItem.value = item\r\n            if(item == localStorage.getItem('fieldSize') || item.value ==4) {\r\n                selectItem.setAttribute('selected', true)\r\n            }\r\n            chooseFieldSize.appendChild(selectItem)\r\n        })\r\n        newGame.classList.add('new-game')\r\n        newGame.textContent = 'New Game';\r\n\r\n        \r\n        time.classList.add('time');\r\n        time.appendChild(stopWatch)\r\n        moveCount.textContent = 0;\r\n        moveCount.classList.add('move-count')\r\n        moves.classList.add('moves');\r\n        moves.textContent = `Moves: `;\r\n        moves.appendChild(moveCount)\r\n        header.appendChild(moves);\r\n        header.appendChild(time);\r\n        header.appendChild(pauseGame)\r\n        header.appendChild(volumeUp)\r\n        header.appendChild(reload)\r\n    \r\n        header.classList.add('header')\r\n        field.classList.add('field');\r\n        overlay.classList.add('overlay')\r\n        overlay.appendChild(newGame)\r\n\r\n        overlay.appendChild(saveGame)\r\n        overlay.appendChild(loadGame)\r\n        overlay.appendChild(leaderButton)\r\n        overlay.appendChild(chooseFieldSize);\r\n        field.appendChild(overlay)\r\n        \r\n        pauseGame.textContent = 'PAUSE';\r\n        pauseGame.classList.add('pause-button');\r\n        pauseGame.setAttribute('disabled', 'true')\r\n        pauseGame.addEventListener('click', ()=>{\r\n            this.isPause = !this.isPause;\r\n           \r\n            if(this.isPause) {\r\n                pauseGame.textContent = 'RESUME';\r\n                \r\n                field.appendChild(overlay);\r\n                this.pauseHandler()\r\n                \r\n            } else {\r\n                this.resumeTimer()\r\n                pauseGame.textContent = 'PAUSE';\r\n                overlay.remove();\r\n            }\r\n        })\r\n        document.body.appendChild(audioClick)\r\n        document.body.appendChild(header);\r\n        document.body.appendChild(field);\r\n        document.body.appendChild(leaderBoardWrap)\r\n        return field;\r\n    }\r\n\r\n    getBlocks() {\r\n        let newField = this.getField();\r\n        this.checkSolvability(this.numbers)\r\n        this.numbers.forEach((item) => {\r\n            const block = document.createElement('div');\r\n            block.classList.add('field__item');\r\n            block.setAttribute('data-num',item);\r\n            block.setAttribute('draggable', true)\r\n            block.textContent =item + 1 - 1;\r\n            block.style.width = `${this.blockSize}px`;\r\n            block.style.height = `${this.blockSize}px`;\r\n            block.style.backgroundImage = 'url(\"./img/327e3224e20da2aa30c94d226bb2556e.jpg\")';\r\n            this.sortedArray.push(block)\r\n        })\r\n       \r\n        this.sortedArray.forEach((item, index)=>{\r\n            this.suffleIndex.push(item.textContent)\r\n            this.blocksPosition(item, index);\r\n         newField.appendChild(item)\r\n     })\r\n        this.blocksListenerHandler()\r\n    }\r\n\r\n     shuffle(a) {\r\n        var j, x, i;\r\n        for (i = a.length - 1; i > 0; i--) {\r\n            j = Math.floor(Math.random() * (i + 1));\r\n            x = a[i];\r\n            a[i] = a[j];\r\n            a[j] = x;\r\n        }\r\n        return a;\r\n    }\r\n    blocksPosition(block, index) {   \r\n        \r\n        const left = index % this.rows;\r\n        const top = (index - left) / this.rows;\r\n        let backLeft = block.innerHTML % this.rows;\r\n        let backgroundLeft = `-${backLeft*this.blockSize}px`;\r\n        let backTop = (block.innerHTML - backLeft)/this.rows\r\n        let backgrounTop = `-${backTop * this.blockSize}px`;\r\n        block.style.backgroundRepeat = 'no-repeat'\r\n        block.style.backgroundPosition = ` ${backgroundLeft}  ${backgrounTop} `\r\n        if(block.innerHTML % this.rows === 0 && block.innerHTML!==0) {\r\n            let backgrounTop = `-${backTop * this.blockSize - 143}px`;\r\n            let backgroundLeft = `-${backLeft*this.blockSize + 454}px`;\r\n            block.style.backgroundPosition = ` ${backgroundLeft}  ${backgrounTop} `\r\n        }\r\n       \r\n        this.blocksCoord.push({\r\n            value: block.innerHTML - 1,\r\n            left: left,\r\n            top: top,\r\n            elem: block,\r\n        })\r\n        let blockAmount = this.rows * this.columns\r\n        if((parseInt(block.innerHTML)) === blockAmount) {\r\n            block.ondragstart = function() {\r\n                return false;\r\n              };\r\n            block.addEventListener('dragover', (e)=>{\r\n                e.preventDefault()\r\n\r\n            })\r\n            \r\n            this.emptyBlock = index\r\n            block.textContent = '';\r\n            block.style.background = 'none'\r\n           \r\n            this.empty.left = `${left * this.blockSize}px`;\r\n            this.empty.top =`${top * this.blockSize}px`;\r\n        }\r\n        block.style.left = `${left * this.blockSize}px`;\r\n        block.style.top = `${top * this.blockSize}px`;\r\n\r\n    }\r\ninit(){\r\n    \r\n}\r\n\r\n}\r\n\r\nexport default Render;\r\n\r\n\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop)","// startup\n// Load entry module\n// This entry module is referenced by other modules so it can't be inlined\n__webpack_require__(350);\n__webpack_require__(751);\n__webpack_require__(373);\n"],"sourceRoot":""}